// <auto-generated />
using System;
using Actonymous.API.ReportSettingsExporter.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Actonymous.API.ReportSettingsExporter.Migrations.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.ContractInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<byte[]>("ContractFile")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ContractInfo");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.CustomerInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderFullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CustomerInfo");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.ExecutorInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderFullname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HeaderPosition")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("RatePerHour")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("ExecutorInfo");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.ExportReportSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("JiraCredentialsId")
                        .HasColumnType("bigint");

                    b.Property<long>("MorpherSettingsId")
                        .HasColumnType("bigint");

                    b.Property<long>("TemplateSettingsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("JiraCredentialsId");

                    b.HasIndex("MorpherSettingsId");

                    b.HasIndex("TemplateSettingsId");

                    b.ToTable("ExportReportSettings");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.JiraCredentials", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServerAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("JiraCredentials");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.MorpherSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MorpherSettings");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.TemplateFilesInfo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<byte[]>("ActTemplateFile")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("TaskTemplateFile")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("TemplateFilesInfo");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.TemplateSettings", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ContractInfoId")
                        .HasColumnType("bigint");

                    b.Property<long>("CustomerInfoId")
                        .HasColumnType("bigint");

                    b.Property<long>("ExecutorInfoId")
                        .HasColumnType("bigint");

                    b.Property<long>("TemplateFilesInfoId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContractInfoId");

                    b.HasIndex("CustomerInfoId");

                    b.HasIndex("ExecutorInfoId");

                    b.HasIndex("TemplateFilesInfoId");

                    b.ToTable("TemplateSettings");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.ExportReportSettings", b =>
                {
                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.JiraCredentials", "JiraCredentials")
                        .WithMany()
                        .HasForeignKey("JiraCredentialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.MorpherSettings", "MorpherSettings")
                        .WithMany()
                        .HasForeignKey("MorpherSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.TemplateSettings", "TemplateSettings")
                        .WithMany()
                        .HasForeignKey("TemplateSettingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("JiraCredentials");

                    b.Navigation("MorpherSettings");

                    b.Navigation("TemplateSettings");
                });

            modelBuilder.Entity("Actonymous.API.ReportSettingsExporter.DAL.Entities.TemplateSettings", b =>
                {
                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.ContractInfo", "ContractInfo")
                        .WithMany()
                        .HasForeignKey("ContractInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.CustomerInfo", "CustomerInfo")
                        .WithMany()
                        .HasForeignKey("CustomerInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.ExecutorInfo", "ExecutorInfo")
                        .WithMany()
                        .HasForeignKey("ExecutorInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actonymous.API.ReportSettingsExporter.DAL.Entities.TemplateFilesInfo", "TemplateFilesInfo")
                        .WithMany()
                        .HasForeignKey("TemplateFilesInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContractInfo");

                    b.Navigation("CustomerInfo");

                    b.Navigation("ExecutorInfo");

                    b.Navigation("TemplateFilesInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
